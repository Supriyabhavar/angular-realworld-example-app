pipeline {
    agent any

    // environment {
    //     EXAMPLE_CREDS = credentials('Aws-creds')
    // }

    stages {
        stage('Notify') {
            steps {
               slackSend (channel:"test-jenkins" ,color: "#3498db", message: "Build started")
            }
        stage('Install') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }
            
        stage('Upload') {
            steps {
                withAWS(credentials: 'Aws-creds', region: 'ap-south-1') {
                    sh '''
                    cd dist/
                    cd angular-conduit/   
                    aws s3 cp . s3://websitehostingsupriya/ --recursive
                    '''
                }
                
            }
        }

        stage('Invalidation') {
            steps {
                withAWS(credentials: 'Aws-creds', region: 'ap-south-1') {
                    sh 'aws cloudfront create-invalidation --distribution-id EG54EP0R0QFPK --paths "/*"'
                }
            }
        }
    }

    post {
        success {
            slackSend (channel:"test-jenkins" ,color: "#2ecc71" , message: "Build succeeded")
        }
        failure {
             slackSend (channel:"test-jenkins" ,color: "#e74c3c", message: "Build failed")
        }
    }

}